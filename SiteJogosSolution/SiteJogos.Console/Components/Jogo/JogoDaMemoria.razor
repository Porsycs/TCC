@inject IJSRuntime JsRuntime;
@inject DialogService DialogService;

<RadzenTemplateForm Data="@jogo" Submit="@((Jogo args) => { Submit(args); })" Style="margin-top: 1.5rem">
    <RadzenRow Gap="2rem" Class="rz-p-0 rz-p-lg-4">
        <RadzenColumn Size="12" SizeMD="12">
            <RadzenStack>
                <RadzenFieldset Text="Geral">
                    <RadzenStack Gap="1rem">
                        <RadzenRow AlignItems="AlignItems.Center">
                            <RadzenColumn Size="12" SizeMD="12">
                                <RadzenLabel Text="Nome" />
                                <RadzenTextBox Name="Nome" @bind-Value=@jogo.Nome AutoComplete="false" Style="display: block; width: 100%" />
                            </RadzenColumn>
                        </RadzenRow>
                    </RadzenStack>
                </RadzenFieldset>
            </RadzenStack>
        </RadzenColumn>
    </RadzenRow>
    <RadzenRow Gap="2rem" Class="rz-p-0 rz-p-lg-4">
        <RadzenColumn Size="12" SizeMD="12">
            <RadzenStack>
                <RadzenFieldset Text="Cartas">
                    <RadzenStack Gap="1rem">
                        <RadzenRow AlignItems="AlignItems.Center">
                            <RadzenColumn Size="12" SizeMD="12">
                                <RadzenDataGrid @ref="grid" AllowFiltering="false" AllowColumnResize="true" Responsive="true" AllowAlternatingRows="true" AllowSorting="false" PageSize="5" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="false" EmptyText="Nenhuma Carta Adicionada"
                                                Data="@midias" TItem="JogoDaMemoriaMidia" Style="margin-top: 1.5rem; height: calc(100vh - 35rem);height: calc(100vh - 35rem);">
                                    <HeaderTemplate>
                                        <RadzenButton Text="Adicionar Carta" Click=@(() => ExibePopupInsereMidia()) />
                                    </HeaderTemplate>
                                    <Columns>
                                        <RadzenDataGridColumn Context="data" TItem="JogoDaMemoriaMidia" Property="MidiaPrimariaId" Title="Imagem 1">
                                            <Template>
                                                <RadzenImage Path="@(data.MidiaPrimaria.Url != null ? data.MidiaPrimaria.Url : $"/Midia/GetArquivo?id={data.MidiaPrimariaId}")" Style="max-height: 6rem; width: auto; max-width: 6rem; height: auto;" />
                                            </Template>
                                        </RadzenDataGridColumn>
                                        <RadzenDataGridColumn Context="data" TItem="JogoDaMemoriaMidia" Property="MidiaSecundariaId" Title="Imagem 2">
                                            <Template>
                                                <RadzenImage Path="@(data.MidiaSecundaria.Url != null ? data.MidiaSecundaria.Url : $"/Midia/GetArquivo?id={data.MidiaSecundariaId}")" Style="max-height: 6rem; width: auto; max-width: 6rem; height: auto;" />
                                            </Template>
                                        </RadzenDataGridColumn>
                                        <RadzenDataGridColumn TItem="JogoDaMemoriaMidia" Context="Id" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Frozen="true" Width="4rem" Resizable="false">
                                            <Template Context="Id">
                                                <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="delete" Variant="Variant.Flat" Shade="Shade.Lighter" Size="ButtonSize.Medium" Click="(args => DeletaMidia(Id))" class="my-1 ms-1" />
                                            </Template>
                                        </RadzenDataGridColumn>
                                    </Columns>
                                </RadzenDataGrid>
                            </RadzenColumn>
                        </RadzenRow>
                    </RadzenStack>
                </RadzenFieldset>
            </RadzenStack>
        </RadzenColumn>
    </RadzenRow>
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Gap="1rem" Class="rz-mt-8 rz-mb-4">
        <RadzenButton BusyText="Salvando" ButtonType="ButtonType.Submit" Size="ButtonSize.Large" Icon="save" Text="Salvar" />
    </RadzenStack>
</RadzenTemplateForm>

@code {

    public Jogo jogo = new Jogo();
    public RadzenDataGrid<JogoDaMemoriaMidia> grid;
    public List<JogoDaMemoriaMidia> midias = new List<JogoDaMemoriaMidia>();

    public void Atualiza()
    {
        StateHasChanged();
    }

    void DeletaMidia(JogoDaMemoriaMidia item)
    {
        midias.Remove(item);
        grid.Reload();
    }

    async void ExibePopupInsereMidia()
    {
        await DialogService.OpenAsync<PopupJogoDaMemoriaMidia>("Adicionar Carta", new Dictionary<string, object>() { { "jogoDaMemoria", this } }, new DialogOptions() { Width = "1000px", Height = "auto", Resizable = false, Draggable = false });
    }

    async Task Submit(Jogo j)
    {
        if (string.IsNullOrEmpty(jogo?.Nome?.Trim()))
        {
            await JsRuntime.InvokeVoidAsync("notifica", "Erro", "Insira um nome para seu jogo", "error");
            return;
        }

        if (midias.Count() < 2)
        {
            await JsRuntime.InvokeVoidAsync("notifica", "Erro", "Insira pelo menos 2 cartas para salvar", "error");
            return;
        }

        var dados = new 
        { 
            jogo = Newtonsoft.Json.JsonConvert.SerializeObject(jogo), 
            midias = Newtonsoft.Json.JsonConvert.SerializeObject(midias)
        };

        var retorno = await JsRuntime.InvokeAsync<RetornoViewModel>("getDados", "/Jogo/InsereJogoDaMemoria", dados, "POST");
        await JsRuntime.InvokeVoidAsync("notifica", retorno.Sucesso ? "Sucesso" : "Erro", retorno.Mensagem, retorno.Sucesso ? "success" : "error");

        if (retorno.Sucesso)
        {
            await JsRuntime.InvokeVoidAsync("redirecionaTela", "/MeusJogos");
        }
    }
}
