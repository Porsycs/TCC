@inject IJSRuntime JsRuntime;
@inject HttpClient httpClient;
@inject NotificationService notificationService;

<RadzenDialog />
<RadzenNotification />
<RadzenContextMenu />
<RadzenTooltip />

<RadzenRow JustifyContent="JustifyContent.Center" AlignItems="AlignItems.Center" Gap="0" Class="rz-my-12 rz-mx-auto rz-border-radius-6 rz-shadow-10" Style="width: 100%; max-width: 90vw; height: 90vh;overflow: hidden;margin: 0">
    <RadzenColumn Size="12" SizeMD="6" SizeSM="0" class="painel">
        <RadzenCard Class="rz-shadow-0 rz-border-radius-0 rz-text-align-center rz-p-12" Style="height: 100%; background: no-repeat url('/images/piratacontrato3.png'); background-size: cover; background-position: center;">
        </RadzenCard>
    </RadzenColumn>
    <RadzenColumn Size="12" SizeMD="6" SizeSM="12">
        <RadzenCard Class="rz-shadow-0 rz-border-radius-0 rz-p-12">
            <RadzenText TextStyle="TextStyle.DisplayH5" TagName="TagName.H2" Class="rz-mb-6">
                Embarque nessa aventura em apenas alguns passos!
            </RadzenText>
            <RadzenText TextStyle="TextStyle.DisplayH6" TagName="TagName.H2" Class="rz-mb-6">
                Digite os dados a seguir
            </RadzenText>
            <RadzenTemplateForm TItem="FormCadastroViewModel" Data=@model Submit=@OnSubmit>
                <RadzenFieldset Text="Cadastro">
                    <RadzenStack Gap="1rem" Class="rz-p-4 rz-p-md-12" Style="padding: 0 !important">
                        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
                            <RadzenColumn Size="12" SizeMD="12">
                                <RadzenLabel Text="Nome" />
                                <RadzenTextBox Name="SenhaAtual" @bind-Value=@model.Nome Style="display: block; width: 100%" />
                                <RadzenRequiredValidator Component="SenhaAtual" Text="Preencha o Nome" Popup="true" Style="position: absolute" />
                            </RadzenColumn>
                        </RadzenRow>
                        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
                            <RadzenColumn Size="12" SizeMD="12">
                                <RadzenLabel Text="E-mail" />
                                <RadzenTextBox Name="Email" @bind-Value=@model.Email Style="display: block; width: 100%" />
                                <RadzenRequiredValidator Component="SenhaAtual" Text="Preencha o E-mail" Popup="true" Style="position: absolute" />
                            </RadzenColumn>
                        </RadzenRow>
                        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
                            <RadzenColumn Size="12" SizeMD="12">
                                <RadzenLabel Text="Senha" />
                                <RadzenPassword Name="Senha" @bind-Value=@model.Senha Style="display: block; width: 100%" />
                                <RadzenRequiredValidator Component="Senha" Text="Insira a Senha" Popup="true" Style="position: absolute" />
                            </RadzenColumn>
                        </RadzenRow>
                        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
                            <RadzenColumn Size="12" SizeMD="12">
                                <RadzenLabel Text="Repetir Senha" />
                                <RadzenPassword Name="ConfirmaSenha" @bind-Value=@model.ConfirmaSenha Style="display: block; width: 100%" />
                                <RadzenRequiredValidator Component="ConfirmaSenha" Text="Insira a Confirmação de Senha" Popup="true" Style="position: absolute" />
                                <RadzenCompareValidator Visible=@(!string.IsNullOrEmpty(model.ConfirmaSenha)) Value=@model.Senha Component="ConfirmaSenha" Text="As senhas devem ser iguais" Popup=true Style="position: absolute" />
                            </RadzenColumn>
                        </RadzenRow>
                        <RadzenRow AlignItems="AlignItems.Center" Class="rz-mt-4">
                            <RadzenColumn Size="12" SizeMD="6" Style="text-align:center">
                                <RadzenButton ButtonStyle="ButtonStyle.Danger" Text="Voltar" Click="retornaHome"></RadzenButton>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="6" Style="text-align:center">
                                <RadzenButton ButtonType="ButtonType.Submit" Text="Cadastrar"></RadzenButton>
                            </RadzenColumn>
                        </RadzenRow>
                    </RadzenStack>
                </RadzenFieldset>
            </RadzenTemplateForm>
        </RadzenCard>
    </RadzenColumn>
</RadzenRow>

@code {

    public FormCadastroViewModel model = new FormCadastroViewModel();

    async void OnSubmit(FormCadastroViewModel model)
    {
        var retorno = await JsRuntime.InvokeAsync<RetornoViewModel>("getDados", "/Autenticacao/CadastraUsuario", model, "POST");
        if (retorno.Sucesso)
        {

            await JsRuntime.InvokeVoidAsync("notifica", retorno.Titulo, retorno.Mensagem, retorno.Codigo);
            await Task.Delay(1500);
            retornaHome();
        }
        else
            await JsRuntime.InvokeVoidAsync("notifica", retorno.Titulo, retorno.Mensagem, retorno.Codigo);
    }

    async void retornaHome()
    {
        await JsRuntime.InvokeVoidAsync("redirecionaTela", "/");
    }
}
